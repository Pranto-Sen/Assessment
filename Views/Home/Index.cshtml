@model IEnumerable<Assessment.Models.sqlModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Trade Data</h1>

<!-- Dropdown to select trade code -->
<label for="tradeCodeDropdown">Select Trade Code:</label>
<select id="tradeCodeDropdown" class="form-control mb-3" onchange="updateChart()">
    <option value="all">All</option>
    @foreach (var tradeCode in Model.Select(m => m.trade_code).Distinct())
    {
        <option value="@tradeCode">@tradeCode</option>
    }
</select>

<!-- Canvas for the chart -->
 <canvas id="tradeChart" width="400" height="200"></canvas> 
<div class="d-flex justify-content-between align-items-center mt-4 mb-4">
    <h1>Trade Data List</h1>
    <a asp-action="Create" class="btn btn-success">Create Item</a>
</div>
<!-- Table to display the data -->
<table class="table">
    <thead>
        <tr>
            <th>Date</th>
            <th>Trade Code</th>
            <th>High</th>
            <th>Low</th>
            <th>Open</th>
            <th>Close</th>
            <th>Volume</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.date</td>
                <td>@item.trade_code</td>
                <td>@item.high</td>
                <td>@item.low</td>
                <td>@item.open</td>
                <td>@item.close</td>
                <td>@item.volume</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>
    <script>
        const tradeData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model));
        console.log(tradeData);  

        const ctx = document.getElementById('tradeChart').getContext('2d');
        let tradeChart = null;

        function updateChart() {
            const selectedTradeCode = document.getElementById('tradeCodeDropdown').value;

            const filteredData = selectedTradeCode === 'all' ? tradeData : tradeData.filter(item => item.trade_code === selectedTradeCode);

            const labels = filteredData.map(item => item.date).sort((a, b) => new Date(a) - new Date(b));
            const closeData = filteredData.map(item => parseFloat(item.close));
            const volumeData = filteredData.map(item => parseInt(item.volume.replace(/,/g, '')));

            if (tradeChart) {
                tradeChart.destroy();
            }

            const maxTicksLimit = Math.floor(labels.length / 5);

            tradeChart = new Chart(ctx, {
                data: {
                    labels: labels,
                    datasets: [{
                        type: 'line',
                        label: 'Close',
                        data: closeData,
                        borderColor: 'blue',
                        yAxisID: 'y',
                    }, {
                        type: 'bar',
                        label: 'Volume',
                        data: volumeData,
                        backgroundColor: 'rgba(0, 123, 255, 0.5)',
                        yAxisID: 'y1',
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        x: {
                            type: 'time',
                            time: {
                                unit: 'day',
                                tooltipFormat: 'll'
                            },
                            ticks: {
                                maxTicksLimit: maxTicksLimit
                            }
                        },
                        y: {
                            type: 'linear',
                            display: true,
                            position: 'left',
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            grid: {
                                drawOnChartArea: false,
                            },
                        }
                    }
                }
            });
        }

        updateChart();
    </script>
}

